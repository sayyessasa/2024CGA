let angle = 0;
const matrixLocation = gl.getUniformLocation(program, "u_matrix");

function drawScene() {
    resizeCanvasToDisplaySize(canvas);
    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);

    // 画面をクリア
    gl.clear(gl.COLOR_BUFFER_BIT);

    // 回転行列を作成
    const radian = angle * Math.PI / 180;
    const cosB = Math.cos(radian);
    const sinB = Math.sin(radian);
    const matrix = new Float32Array([
        cosB, sinB, 0, 0,
       -sinB, cosB, 0, 0,
        0, 0, 1, 0,
        0, 0, 0, 1,
    ]);

    // 回転行列をシェーダーに送信
    gl.uniformMatrix4fv(matrixLocation, false, matrix);

    // 三角形を描画
    gl.drawArrays(gl.TRIANGLES, 0, 3);

    // 次のフレームで回転角度を増加
    angle += 1;

    requestAnimationFrame(drawScene);
}

// アニメーション開始
drawScene();  
